"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –±–æ—Ç–∞."""
import logging
import asyncio
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from llm.client import create_llm_client, generate_response_with_history, LLMError
from llm.prompts import load_system_prompt
from config.settings import Config
from memory.storage import get_user_session, add_message, get_user_history, start_cleanup_task
from monitoring.metrics import metrics_collector

logger = logging.getLogger(__name__)
router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è LLM
llm_client = None
system_prompt = None
config = None


async def init_llm(app_config: Config) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM –∫–ª–∏–µ–Ω—Ç–∞."""
    global llm_client, system_prompt, config
    logger.info("Initializing LLM client...")
    
    config = app_config
    llm_client = await create_llm_client(config.openrouter_api_key)
    system_prompt = load_system_prompt()
    
    # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏
    import asyncio
    asyncio.create_task(start_cleanup_task(
        cleanup_interval_hours=config.cleanup_interval_hours,
        ttl_hours=config.memory_ttl_hours
    ))
    
    # –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if config.log_hourly_stats:
        asyncio.create_task(start_hourly_stats_logging())
    
    logger.info("LLM client and memory cleanup task initialized successfully")


async def start_hourly_stats_logging() -> None:
    """–ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–∂–¥—ã–π —á–∞—Å."""
    while True:
        try:
            await asyncio.sleep(3600)  # –ñ–¥–µ–º —á–∞—Å
            metrics_collector.log_hourly_stats()
        except Exception as e:
            logger.error(f"Error in hourly stats logging: {e}")


@router.message(Command("start"))
async def handle_start(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    user_id = message.from_user.id
    
    # –°–æ–∑–¥–∞–Ω–∏–µ/–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏
    session = get_user_session(user_id, user_name)
    
    welcome_text = f"""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}! üëã

–Ø - –≤–∞—à –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ —Ü–µ–ª–µ–π –æ–±—É—á–µ–Ω–∏—è.

üéØ –ü–æ–º–æ–≥–∞—é —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —É—á–µ–±–Ω—ã–µ —Ü–µ–ª–∏ –ø–æ —Ç–∞–∫—Å–æ–Ω–æ–º–∏–∏ –ë–ª—É–º–∞:
‚Ä¢ –ó–Ω–∞–Ω–∏–µ (–∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤)
‚Ä¢ –ü–æ–Ω–∏–º–∞–Ω–∏–µ (–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π)  
‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ)
‚Ä¢ –ê–Ω–∞–ª–∏–∑ (—Ä–∞–∑–±–æ—Ä –Ω–∞ —á–∞—Å—Ç–∏)
‚Ä¢ –°–∏–Ω—Ç–µ–∑ (—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ)
‚Ä¢ –û—Ü–µ–Ω–∫–∞ (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ)

üìù –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –∑–∞–Ω—è—Ç–∏—è –∏ –æ–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—É—á–µ–Ω–∏—è.

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help"""
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ç–≤–µ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
    add_message(user_id, "user", "/start", config.max_history_size)
    add_message(user_id, "assistant", welcome_text, config.max_history_size)
    
    await message.answer(welcome_text)
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é")


@router.message(Command("help"))
async def handle_help(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    user_id = message.from_user.id
    user_name = message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ/–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏
    session = get_user_session(user_id, user_name)
    
    help_text = """üìñ –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:

"–ü–æ–º–æ–≥–∏—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è –ø–æ –æ—Å–Ω–æ–≤–∞–º –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º. –û–±—É—á–∞–µ–º—ã–π –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."

"–ù—É–∂–Ω—ã —Ü–µ–ª–∏ –¥–ª—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—è –û–£. –û–±—É—á–∞–µ–º—ã–µ –¥–æ–ª–∂–Ω—ã —É–º–µ—Ç—å –ø—Ä–∏–º–µ–Ω—è—Ç—å –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è."

"–ö–∞–∫ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è –ø–æ —Ç–µ–º–µ - –ü–æ—Ä—è–¥–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏ –ø–æ–∂–∞—Ä–µ. –û–±—É—á–∞–µ–º—ã–µ –¥–æ–ª–∂–Ω—ã –æ–±—ä—è—Å–Ω–∏—Ç—å —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –æ–±–æ–±—â–∏—Ç—å –∏–ª–∏ –ø–µ—Ä–µ—Å–∫–∞–∑–∞—Ç—å."

üí° –£–∫–∞–∂–∏—Ç–µ:
‚Ä¢ –¢–µ–º–∞—Ç–∏–∫—É –∑–∞–Ω—è—Ç–∏—è
‚Ä¢ –¶–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é (–≤–æ–∑—Ä–∞—Å—Ç, —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏)
‚Ä¢ –ñ–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–æ –ë–ª—É–º—É
‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è"""
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ç–≤–µ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
    add_message(user_id, "user", "/help", config.max_history_size)
    add_message(user_id, "assistant", help_text, config.max_history_size)
    
    await message.answer(help_text)
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é")


@router.message()
async def handle_message(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å LLM –∏ –ø–∞–º—è—Ç—å—é –¥–∏–∞–ª–æ–≥–∞."""
    user_text = message.text
    user_id = message.from_user.id
    user_name = message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, –¥–ª–∏–Ω–∞: {len(user_text)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ LLM
    if not llm_client or not system_prompt or not config:
        logger.error("LLM client not initialized")
        await message.answer("–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
    if len(user_text) > config.max_message_length:
        logger.warning(f"Message too long from user {user_id}: {len(user_text)} chars")
        metrics_collector.record_message(user_id, len(user_text), processed=False)
        await message.answer(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º—É–º {config.max_message_length} —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    
    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ/—Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        session = get_user_session(user_id, user_name)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è LLM
        history = get_user_history(user_id)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        add_message(user_id, "user", user_text, config.max_history_size)
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏
        logger.info(f"Generating LLM response with history for user {user_id} ({len(history)} messages)")
        
        response = await generate_response_with_history(
            client=llm_client,
            system_prompt=system_prompt,
            user_message=user_text,
            message_history=history,
            primary_model=config.primary_model,
            fallback_model=config.fallback_model,
            retry_attempts=config.retry_attempts,
            temperature=config.temperature,
            max_tokens=config.max_tokens,
            top_p=config.top_p
        )
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
        add_message(user_id, "assistant", response, config.max_history_size)
        
        # –ó–∞–ø–∏—Å—å –º–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        metrics_collector.record_message(user_id, len(user_text), processed=True)
        
        await message.answer(response)
        logger.info(f"LLM response with history sent to user {user_id}")
        
    except LLMError as e:
        logger.error(f"LLM error for user {user_id}: {e}")
        metrics_collector.record_message(user_id, len(user_text), processed=False)
        error_message = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."
        await message.answer(error_message)
        
    except Exception as e:
        logger.error(f"Unexpected error for user {user_id}: {e}")
        metrics_collector.record_message(user_id, len(user_text), processed=False)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
